DVSB      START				;上位プログラムで2150以上の割られる数を切ってる(1970+179=2149まで)　※65535/365=179余り200
          RPUSH				;上位プログラムで1075以上の割る数を切ってる(2148/2=1074まで)
          LD        GR2,=5400		;割られる数
          LD        GR3,=270		;割る数
          LD        GR1,=-1
          LD        GR6,=-1		
          LD        GR4,GR2
          LD        GR5,GR3
DCNT      SRL       GR5,1		;GR5(割る数)を1ビット右シフトして、ビット判定しながら2で割れる回数をカウント
          JOV       FIND		;右端ビットが1だった場合にFINDへ
          JZE       NEXT		;1ビット右シフトループの結果、割る数が0になった時に下準備が終了して次へ
          ADDA      GR6,=1		;右端ビットが1でなくても右シフトしているので2で割れる回数をカウント
          JUMP      DCNT		;
FIND      ADDA      GR6,=1		;右端ビットが1の時にも右シフトしているので2で割れる回数をカウント
          ADDA      GR1,=1		;右端ビットが1なので掛け算に使用する領域の格納アドレスをひとつ先にずらす
          ST        GR6,FADR,GR1	;右端ビットが1の時に、2で割った回数＝現在調べ終わったビット位置を掛け算領域に入れる
          JUMP      DCNT		;
NEXT      LD        GR7,=-1		;
          ADDA      GR1,=1		;
          ST        GR7,FADR,GR1	;掛け算領域の終端に-1を格納
          LD        GR0,=0		;
DVID      LD        GR5,=-1		;
          SRA       GR4,0,GR6		;初回は割られる数(例:5400)を2で割れる回数分右シフト。商の近似値が出る。2回目は差を右シフト
          JZE       DNOT		;割り切れない場合は右シフト中に0になる
          ADDA      GR4,GR0		;2回目以降は商の近似値(掛け算前)に、差に割る数が何個あるかの近似値を足していく
          LD        GR7,=0		;
MLTP      LD        GR1,GR4		;GR1に商の近似値を設定
          ADDA      GR5,=1		;
          LD        GR3,FADR,GR5	;掛け算領域の先頭からひとつずつ割る数の1を検出したビット位置を取り出す
          JMI       DIFF		;掛け算領域の終端-1を取り出したら終了
          SLL       GR1,0,GR3		;ビット位置を使って商の近似値を掛け算し、割り算前の値との一致を目指す
          ADDA      GR7,GR1		;ビット1個分掛け算したものをGR7にまとめていく
          JUMP      MLTP		;
DIFF      LD        GR5,GR2		;GR5に割り算前の値を設定する
          SUBA      GR5,GR7		;割り算前の値と近似値の差を求める(差がなくなるまで近似値の方が大きく、マイナスになる)
          JZE       DCAN		;差がなくなれば割り切れる
          LD        GR0,GR4		;GR0に商の近似値(掛け算前)を設定
          LD        GR4,GR5		;GR4に割り算前の値と近似値の差を設定
          JUMP      DVID		;
DNOT      LD        GR0,=0		;
          JUMP      DEND		;
DCAN      LD        GR0,=1		;
DEND      RPOP
          RET
FADR      DS        13			;割る数は1074までなので12ビット+1ビット(終端用)分の領域があれば全て格納できる
          END